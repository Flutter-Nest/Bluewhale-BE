generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId     Int       @id @default(autoincrement()) @map("id")
  userName   String    @db.VarChar(15)
  password   String    @db.VarChar(255)
  email      String    @db.VarChar(255)
  birth      DateTime?
  grade      Int      
  className  String?   
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime? 

  SchoolTests SchoolTests[]
  MockTests   MockTests[]
  Schedules   Schedules[]
  Interviews  Interviews[]
}

model SchoolTests {
  id           Int       @id @default(autoincrement()) @map("id")
  userId       Int
  subject      String    @db.VarChar(255)
  score        Int
  rank         Int
  studentCount Int
  grade        Int
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime? 

  User Users @relation(fields: [userId], references: [userId])
}

model MockTests {
  id           Int    @id @default(autoincrement()) @map("id")
  userId       Int
  subject      String @db.VarChar(255)
  score        Int
  rank         Int
  studentCount Int
  grade        Int
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime? 

  User Users @relation(fields: [userId], references: [userId])
}

model Schedules {
  id         Int       @id @default(autoincrement()) @map("id")
  userId     Int
  subjectId  Int
  content    String    @db.VarChar(255)
  startTime  Int
  endTime    Int
  completion Int       @default(0)
  date       DateTime
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime? 

  User    Users    @relation(fields: [userId], references: [userId])
  Subject Subjects @relation(fields: [subjectId], references: [subjectId])
}

model Subjects {
  subjectId    Int       @id @default(autoincrement()) @map("id")
  subjectName  String    @db.VarChar(255)
  subjectColor String    @db.VarChar(255)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime? 

  Schedules Schedules[]
}

model Interviews {
  interviewId  Int       @id @default(autoincrement()) @map("id")
  CACE         Int    
  PIPO         Int    
  RURD         Int
  DT           Int
  DP           Int
  AE           Int
  RF           Int
  userId       Int
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime? 

  User    Users    @relation(fields: [userId], references: [userId])
}

model Opus {
  opusId       Int @id @default(autoincrement()) @map("id")
  teacher      String
  title        String
  grade        Int
  className    String
  date         DateTime
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime? 
} 