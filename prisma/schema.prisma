generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId     Int       @id @default(autoincrement()) @map("id")
  userName   String    @db.VarChar(15)
  password   String    @db.VarChar(255)
  email      String    @db.VarChar(255)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime? 

  SchoolTests SchoolTest[]
  MockTests   MockTest[]
  Schedules   Schedule[]
}

model SchoolTest {
  id           Int       @id @default(autoincrement()) @map("id")
  userId       Int
  subject      String    @db.VarChar(255)
  score        Int
  rank         Int
  studentCount Int
  grade        Int
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime? 

  User User @relation(fields: [userId], references: [userId])
}

model MockTest {
  id           Int    @id @default(autoincrement()) @map("id")
  userId       Int
  subject      String @db.VarChar(255)
  score        Int
  rank         Int
  studentCount Int
  grade        Int
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime? 

  User User @relation(fields: [userId], references: [userId])
}

model Schedule {
  id         Int       @id @default(autoincrement()) @map("id")
  userId     Int
  subjectId  Int
  content    String    @db.VarChar(255)
  startTime  Int
  endTime    Int
  completion Int       @default(0)
  date       DateTime
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime? 

  User    User    @relation(fields: [userId], references: [userId])
  Subject Subject @relation(fields: [subjectId], references: [subjectId])
}

model Subject {
  subjectId    Int       @id @default(autoincrement()) @map("id")
  subjectName  String    @db.VarChar(255)
  subjectColor String    @db.VarChar(255)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime? 

  Schedules Schedule[]
}
